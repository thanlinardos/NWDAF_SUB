version: '3.8'
networks:
  monitor-net:
    driver: bridge
name: dockprom
services:
  nwdafSubCollector:
    container_name: nwdafSubCollector
    image: thanlinardos/nwdaf_sub_collector:0.0.1-SNAPSHOT
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    ports:
      - "${collector_port}:${collector_port}"
      - "5006:5006"
    network_mode: host
    environment:
      TIMEZONE: "${TIMEZONE}"
      server.port: ${collector_port}
      DEBUG_PORT: 5006
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      nnwdaf-eventsubscription.prometheus_url: http://${prom_host}:${prom_port}/api/v1/query
      nnwdaf-eventsubscription.allow_dummy_data: false
      nnwdaf-eventsubscription.allow_prom_data: true
      nnwdaf-eventsubscription.allow_nef_data: false
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$${DEBUG_PORT} -jar /app.jar",
              "bash -c '/tmp/setTimeZone.sh'" ]

  nwdafSubCollector2:
    container_name: nwdafSubCollector2
    image: thanlinardos/nwdaf_sub_collector:0.0.1-SNAPSHOT
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    ports:
      - "${collector_port2}:${collector_port2}"
      - "5012:5012"
    network_mode: host
    environment:
      TIMEZONE: "${TIMEZONE}"
      server.port: ${collector_port2}
      DEBUG_PORT: 5012
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      nnwdaf-eventsubscription.prometheus_url: http://${prom_host}:${prom_port}/api/v1/query
      nnwdaf-eventsubscription.allow_dummy_data: true
      nnwdaf-eventsubscription.allow_prom_data: false
      nnwdaf-eventsubscription.allow_nef_data: false
      nnwdaf-eventsubscription.no_dummy_nfload: 20
      nnwdaf-eventsubscription.no_dummy_uemob: 20
      nnwdaf-eventsubscription.no_dummy_uecomm: 20
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$${DEBUG_PORT} -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]

  nwdafSubCollector3:
    container_name: nwdafSubCollector3
    image: thanlinardos/nwdaf_sub_collector:0.0.1-SNAPSHOT
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    ports:
      - "${collector_port3}:${collector_port3}"
      - "5014:5014"
    network_mode: host
    environment:
      TIMEZONE: "${TIMEZONE}"
      server.port: ${collector_port3}
      DEBUG_PORT: 5014
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      nnwdaf-eventsubscription.prometheus_url: http://${prom_host}:${prom_port}/api/v1/query
      nnwdaf-eventsubscription.allow_dummy_data: false
      nnwdaf-eventsubscription.allow_prom_data: false
      nnwdaf-eventsubscription.allow_nef_data: true
      nnwdaf-eventsubscription.selected_scenario: 2
      nnwdaf-eventsubscription.nef_url: https://${nef_host}:${nef_port}/api/v1/
      nnwdaf-eventsubscription.nef_state_ues: ue_movement/state-ues
      nnwdaf-eventsubscription.nef_username: ${nef_username}
      nnwdaf-eventsubscription.nef_password: ${nef_password}
      nnwdaf-eventsubscription.nef_group_id: ${nef_group_id}
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$${DEBUG_PORT} -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]

  nwdafSubConsume:
    container_name: nwdafSubConsume
    image: thanlinardos/nwdaf_sub:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    entrypoint: /bin/sh -c
    command: ["java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5013 -jar /app.jar",
              "bash -c '/tmp/setTimeZone.sh'"]
    ports:
      - "${server_consume_port}:${server_consume_port}"
      - "5013:5013"
    networks:
      - monitor-net
    env_file:
      - db.env
    environment:
      TIMEZONE: "${TIMEZONE}"
      SPRING.PROFILES.ACTIVE: production
      nnwdaf-eventsubscription.notifier: false
      nnwdaf-eventsubscription.leader: true
      nnwdaf-eventsubscription.consumerUrl: "https://${server_consume_host}:${server_consume_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      SERVER.PORT: "${server_consume_port}"
      spring.task.scheduling.pool.size: 16
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      spring.data.redis.host: redis
      spring.data.redis.port: 6379
      nnwdaf-eventsubscription.log.kb: false
      nnwdaf-eventsubscription.log.simple: false
      nnwdaf-eventsubscription.log.sections: false
      nnwdaf-eventsubscription.log.consumer: false
      nnwdaf-eventsubscription.integration.startup: false
      nnwdaf-eventsubscription.integration.resetmetricsdb: false
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubConsume2:
    container_name: nwdafSubConsume2
    image: thanlinardos/nwdaf_sub:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    deploy:
      replicas: 1
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5015 -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]
    ports:
      - "${server_consume2_port}:${server_consume2_port}"
      - "5015:5015"
    networks:
      - monitor-net
    env_file:
      - db.env
    environment:
      TIMEZONE: "${TIMEZONE}"
      SPRING.PROFILES.ACTIVE: production
      nnwdaf-eventsubscription.notifier: false
      nnwdaf-eventsubscription.leader: false
      nnwdaf-eventsubscription.consumerUrl: "https://nwdafSubConsume2:${server_consume2_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      SERVER.PORT: "${server_consume2_port}"
      spring.task.scheduling.pool.size: 16
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      spring.data.redis.host: redis
      spring.data.redis.port: 6379
      nnwdaf-eventsubscription.log.kb: false
      nnwdaf-eventsubscription.log.simple: false
      nnwdaf-eventsubscription.log.sections: false
      nnwdaf-eventsubscription.log.consumer: false
      nnwdaf-eventsubscription.integration.startup: false
      nnwdaf-eventsubscription.integration.resetmetricsdb: false
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubConsume3:
    container_name: nwdafSubConsume3
    image: thanlinardos/nwdaf_sub:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    deploy:
      replicas: 0
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5025 -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]
    ports:
      - "${server_consume3_port}:${server_consume3_port}"
      - "5025:5025"
    networks:
      - monitor-net
    env_file:
      - db.env
    environment:
      TIMEZONE: "${TIMEZONE}"
      SPRING.PROFILES.ACTIVE: production
      nnwdaf-eventsubscription.notifier: false
      nnwdaf-eventsubscription.leader: false
      nnwdaf-eventsubscription.consumerUrl: "https://nwdafSubConsume2:${server_consume3_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      SERVER.PORT: "${server_consume3_port}"
      spring.task.scheduling.pool.size: 16
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      spring.data.redis.host: redis
      spring.data.redis.port: 6379
      nnwdaf-eventsubscription.log.kb: false
      nnwdaf-eventsubscription.log.simple: false
      nnwdaf-eventsubscription.log.sections: false
      nnwdaf-eventsubscription.log.consumer: false
      nnwdaf-eventsubscription.integration.startup: false
      nnwdaf-eventsubscription.integration.resetmetricsdb: false
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSub:
    container_name: nwdafSubNotifier
    image: thanlinardos/nwdaf_sub:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]
    ports:
      - "${server_port}:${server_port}"
      - "5005:5005"
    networks:
      - monitor-net
    env_file:
      - db.env
    environment:
      TIMEZONE: "${TIMEZONE}"
      SPRING.PROFILES.ACTIVE: production
      nnwdaf-eventsubscription.periodicWakeUp: false
      nnwdaf-eventsubscription.initSubscriptions: true
      nnwdaf-eventsubscription.consume: false
      nnwdaf-eventsubscription.leader: true
      nnwdaf-eventsubscription.consumerUrl: "https://${server_consume_host}:${server_consume_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      SERVER.PORT: "${server_port}"
      spring.task.scheduling.pool.size: 16
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      spring.data.redis.host: redis
      spring.data.redis.port: 6379
      nnwdaf-eventsubscription.log.kb: false
      nnwdaf-eventsubscription.log.simple: false
      nnwdaf-eventsubscription.log.sections: false
      nnwdaf-eventsubscription.log.consumer: false
      nnwdaf-eventsubscription.integration.startup: false
      nnwdaf-eventsubscription.integration.noSubs: 5
      nnwdaf-eventsubscription.integration.noClients: 5
      nnwdaf-eventsubscription.integration.resetsubdb: true
      nnwdaf-eventsubscription.integration.resetnotifdb: true
      nnwdaf-eventsubscription.integration.cycleSeconds: 100
      nnwdaf-eventsubscription.integration.max_no_cycles: 1
      nnwdaf-eventsubscription.secureWithTrustStore: false
      nnwdaf-eventsubscription.nef_group_id: ${nef_group_id}

  nwdafSubNotifier2:
    container_name: nwdafSubNotifier2
    image: thanlinardos/nwdaf_sub:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    deploy:
      replicas: 1
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    entrypoint: /bin/sh -c
    command: [ "java -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5017 -jar /app.jar",
               "bash -c '/tmp/setTimeZone.sh'" ]
    ports:
      - "${server_port2}:${server_port2}"
      - "5017:5017"
    networks:
      - monitor-net
    env_file:
      - db.env
    environment:
      TIMEZONE: "${TIMEZONE}"
      SPRING.PROFILES.ACTIVE: production
      nnwdaf-eventsubscription.periodicWakeUp: false
      nnwdaf-eventsubscription.consume: false
      nnwdaf-eventsubscription.leader: false
      nnwdaf-eventsubscription.consumerUrl: "https://${server_consume_host}:${server_consume_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host2}:${server_port2}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      SERVER.PORT: "${server_port2}"
      spring.task.scheduling.pool.size: 16
      spring.kafka.bootstrap-servers: ${kafka1_host}:${kafka1_port}
      spring.data.redis.host: redis
      spring.data.redis.port: 6379
      nnwdaf-eventsubscription.log.kb: false
      nnwdaf-eventsubscription.log.simple: false
      nnwdaf-eventsubscription.log.sections: false
      nnwdaf-eventsubscription.log.consumer: false
      nnwdaf-eventsubscription.integration.startup: false
      nnwdaf-eventsubscription.integration.noSubs: 20
      nnwdaf-eventsubscription.integration.noClients: 5
      nnwdaf-eventsubscription.integration.resetsubdb: false
      nnwdaf-eventsubscription.integration.resetnotifdb: true
      nnwdaf-eventsubscription.integration.cycleSeconds: 100
      nnwdaf-eventsubscription.integration.max_no_cycles: 1
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubClient:
    container_name: nwdafSubClient
    image: thanlinardos/nwdaf_sub_client:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    command: "bash -c '/tmp/setTimeZone.sh'"
    ports:
      - "${client_port}:${client_port}"
      - "5007:5007"
    networks:
      - monitor-net
    environment:
      TIMEZONE: "${TIMEZONE}"
      springdoc.enable-native-support: true
      springdoc.swagger-ui.path: /swagger-ui
      server.port: "${client_port}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host}:${client_port}/client"
      nnwdaf-eventsubscription.init: false
      #spring configuration:
      spring.datasource.generate-unique-name: false
      spring.datasource.name: eventsubscription
      spring.profiles.active: production
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubClient2:
    container_name: nwdafSubClient2
    image: thanlinardos/nwdaf_sub_client:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    command: "bash -c '/tmp/setTimeZone.sh'"
    ports:
      - "${client_port2}:${client_port2}"
      - "5008:5008"
    networks:
      - monitor-net
    environment:
      TIMEZONE: "${TIMEZONE}"
      springdoc.enable-native-support: true
      springdoc.swagger-ui.path: /swagger-ui
      server.port: "${client_port2}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host2}:${client_port2}/client"
      nnwdaf-eventsubscription.init: false
      #spring configuration:
      spring.datasource.generate-unique-name: false
      spring.datasource.name: eventsubscription
      spring.profiles.active: production
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubClient3:
    container_name: nwdafSubClient3
    image: thanlinardos/nwdaf_sub_client:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    command: "bash -c '/tmp/setTimeZone.sh'"
    ports:
      - "${client_port3}:${client_port3}"
      - "5009:5009"
    networks:
      - monitor-net
    environment:
      TIMEZONE: "${TIMEZONE}"
      springdoc.enable-native-support: true
      springdoc.swagger-ui.path: /swagger-ui
      server.port: "${client_port3}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host3}:${client_port3}/client"
      nnwdaf-eventsubscription.init: false
      #spring configuration:
      spring.datasource.generate-unique-name: false
      spring.datasource.name: eventsubscription
      spring.profiles.active: production
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubClient4:
    container_name: nwdafSubClient4
    image: thanlinardos/nwdaf_sub_client:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    command: "bash -c '/tmp/setTimeZone.sh'"
    ports:
      - "${client_port4}:${client_port4}"
      - "5010:5010"
    networks:
      - monitor-net
    environment:
      TIMEZONE: "${TIMEZONE}"
      springdoc.enable-native-support: true
      springdoc.swagger-ui.path: /swagger-ui
      server.port: "${client_port4}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host4}:${client_port4}/client"
      nnwdaf-eventsubscription.init: false
      #spring configuration:
      spring.datasource.generate-unique-name: false
      spring.datasource.name: eventsubscription
      spring.profiles.active: production
      nnwdaf-eventsubscription.secureWithTrustStore: false

  nwdafSubClient5:
    container_name: nwdafSubClient5
    image: thanlinardos/nwdaf_sub_client:0.0.2-SNAPSHOT
    restart: unless-stopped
    tty: true
    volumes:
      - ./scripts/setTimeZone.sh:/tmp/setTimeZone.sh
    command: "bash -c '/tmp/setTimeZone.sh'"
    ports:
      - "${client_port5}:${client_port5}"
      - "5011:5011"
    networks:
      - monitor-net
    environment:
      TIMEZONE: "${TIMEZONE}"
      springdoc.enable-native-support: true
      springdoc.swagger-ui.path: /swagger-ui
      server.port: "${client_port5}"
      nnwdaf-eventsubscription.openapi.dev_url: "https://${server_host}:${server_port}"
      nnwdaf-eventsubscription.client.dev_url: "https://${client_host5}:${client_port5}/client"
      nnwdaf-eventsubscription.init: false
      #spring configuration:
      spring.datasource.generate-unique-name: false
      spring.datasource.name: eventsubscription
      spring.profiles.active: production
      nnwdaf-eventsubscription.secureWithTrustStore: false

volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:
