Subject: [PATCH] patch for nwdafSub
---
Index: backend/app/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/.idea/modules.xml b/backend/app/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1707766782601)
+++ b/backend/app/.idea/modules.xml	(date 1707766782601)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/app.iml" filepath="$PROJECT_DIR$/.idea/app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/.idea/.gitignore b/backend/app/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1707768191348)
+++ b/backend/app/.idea/.gitignore	(date 1707768191348)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: backend/app/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/.idea/misc.xml b/backend/app/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1707769573317)
+++ b/backend/app/.idea/misc.xml	(date 1707769573317)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Poetry (app)" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Poetry (app)" project-jdk-type="Python SDK" />
+  <component name="PythonCompatibilityInspectionAdvertiser">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/.idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/.idea/inspectionProfiles/Project_Default.xml b/backend/app/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1707769573301)
+++ b/backend/app/.idea/inspectionProfiles/Project_Default.xml	(date 1707769573301)
@@ -0,0 +1,16 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyCompatibilityInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ourVersions">
+        <value>
+          <list size="3">
+            <item index="0" class="java.lang.String" itemvalue="2.7" />
+            <item index="1" class="java.lang.String" itemvalue="3.13" />
+            <item index="2" class="java.lang.String" itemvalue="3.10" />
+          </list>
+        </value>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: backend/app/.idea/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/.idea/app.iml b/backend/app/.idea/app.iml
new file mode 100644
--- /dev/null	(date 1707766782593)
+++ b/backend/app/.idea/app.iml	(date 1707766782593)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: backend/app/poetry.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/poetry.lock b/backend/app/poetry.lock
new file mode 100644
--- /dev/null	(date 1707766606778)
+++ b/backend/app/poetry.lock	(date 1707766606778)
@@ -0,0 +1,1132 @@
+[[package]]
+name = "aiofiles"
+version = "0.6.0"
+description = "File support for asyncio."
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "anyio"
+version = "4.1.0"
+description = "High level compatibility layer for multiple asynchronous event loop implementations"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.dependencies]
+exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
+idna = ">=2.8"
+sniffio = ">=1.1"
+
+[package.extras]
+doc = ["packaging", "Sphinx (>=7)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
+test = ["anyio", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "uvloop (>=0.17)"]
+trio = ["trio (>=0.23)"]
+
+[[package]]
+name = "appdirs"
+version = "1.4.4"
+description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
+category = "dev"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "argh"
+version = "0.31.2"
+description = "Plain Python functions as CLI commands without boilerplate"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.extras]
+completion = ["argcomplete (>=2.0)"]
+docs = ["sphinx (>=7.2)", "sphinx-pyproject (==0.3)", "sphinx_rtd_theme (>=2.0)", "readthedocs-sphinx-search (==0.3.2)"]
+linters = ["pre-commit (>=3.4.0)"]
+test = ["tox (>=4.11.3)", "pytest (>=7.4)", "pytest-cov (>=4.1)"]
+
+[[package]]
+name = "arrow"
+version = "1.3.0"
+description = "Better dates & times for Python"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.dependencies]
+python-dateutil = ">=2.7.0"
+types-python-dateutil = ">=2.8.10"
+
+[package.extras]
+doc = ["doc8", "sphinx (>=7.0.0)", "sphinx-autobuild", "sphinx-autodoc-typehints", "sphinx_rtd_theme (>=1.3.0)"]
+test = ["dateparser (>=1.0.0,<2.0.0)", "pre-commit", "pytest", "pytest-cov", "pytest-mock", "pytz (==2021.1)", "simplejson (>=3.0.0,<4.0.0)"]
+
+[[package]]
+name = "asgiref"
+version = "3.7.0"
+description = "ASGI specs, helper code, and adapters"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+typing-extensions = {version = "*", markers = "python_version < \"3.11\""}
+
+[package.extras]
+tests = ["pytest", "pytest-asyncio", "mypy (>=0.800)"]
+
+[[package]]
+name = "attrs"
+version = "23.2.0"
+description = "Classes Without Boilerplate"
+category = "dev"
+optional = false
+python-versions = ">=3.7"
+
+[package.extras]
+cov = ["attrs", "coverage[toml] (>=5.3)"]
+dev = ["attrs", "pre-commit"]
+docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
+tests = ["attrs", "zope-interface"]
+tests-mypy = ["mypy (>=1.6)", "pytest-mypy-plugins"]
+tests-no-zope = ["attrs", "cloudpickle", "hypothesis", "pympler", "pytest-xdist", "pytest (>=4.3.0)"]
+
+[[package]]
+name = "autoflake"
+version = "1.7.8"
+description = "Removes unused imports and unused variables"
+category = "dev"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+pyflakes = ">=1.1.0,<3"
+tomli = {version = ">=2.0.1", markers = "python_version < \"3.11\""}
+
+[[package]]
+name = "bcrypt"
+version = "4.1.2"
+description = "Modern password hashing for your software and your servers"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.extras]
+tests = ["pytest (>=3.2.1,!=3.3.0)"]
+typecheck = ["mypy"]
+
+[[package]]
+name = "binaryornot"
+version = "0.4.4"
+description = "Ultra-lightweight pure Python package to check if a file is binary or text."
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+chardet = ">=3.0.2"
+
+[[package]]
+name = "black"
+version = "19.10b0"
+description = "The uncompromising code formatter."
+category = "dev"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+appdirs = "*"
+attrs = ">=18.1.0"
+click = ">=6.5"
+pathspec = ">=0.6,<1"
+regex = "*"
+toml = ">=0.9.4"
+typed-ast = ">=1.4.0"
+
+[package.extras]
+d = ["aiohttp (>=3.3.2)", "aiohttp-cors"]
+
+[[package]]
+name = "cachetools"
+version = "5.3.2"
+description = "Extensible memoizing collections and decorators"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "certifi"
+version = "2021.10.8"
+description = "Python package for providing Mozilla's CA Bundle."
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "cffi"
+version = "1.16.0"
+description = "Foreign Function Interface for Python calling C code."
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.dependencies]
+pycparser = "*"
+
+[[package]]
+name = "chardet"
+version = "5.2.0"
+description = "Universal encoding detector for Python 3"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "charset-normalizer"
+version = "2.0.12"
+description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
+category = "main"
+optional = false
+python-versions = ">=3.5.0"
+
+[package.extras]
+unicode_backport = ["unicodedata2"]
+
+[[package]]
+name = "click"
+version = "8.0.1"
+description = "Composable command line interface toolkit"
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+colorama = {version = "*", markers = "platform_system == \"Windows\""}
+
+[[package]]
+name = "colorama"
+version = "0.4.6"
+description = "Cross-platform colored terminal text."
+category = "main"
+optional = false
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
+
+[[package]]
+name = "cookiecutter"
+version = "2.1.1"
+description = "A command-line utility that creates projects from project templates, e.g. creating a Python package project from a Python package project template."
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+binaryornot = ">=0.4.4"
+click = ">=7.0,<9.0.0"
+Jinja2 = ">=2.7,<4.0.0"
+jinja2-time = ">=0.2.0"
+python-slugify = ">=4.0.0"
+pyyaml = ">=5.3.1"
+requests = ">=2.23.0"
+
+[[package]]
+name = "coverage"
+version = "4.5.4"
+description = "Code coverage measurement for Python"
+category = "main"
+optional = false
+python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"
+
+[[package]]
+name = "cryptography"
+version = "38.0.4"
+description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+cffi = ">=1.12"
+
+[package.extras]
+docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
+docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
+pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
+sdist = ["setuptools-rust (>=0.11.4)"]
+ssh = ["bcrypt (>=3.1.5)"]
+test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]
+
+[[package]]
+name = "cssselect"
+version = "1.2.0"
+description = "cssselect parses CSS3 Selectors and translates them to XPath 1.0"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "cssutils"
+version = "2.9.0"
+description = "A CSS Cascading Style Sheets library for Python"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.extras]
+docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
+testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "cssselect", "jaraco.test (>=5.1)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "lxml", "importlib-resources"]
+
+[[package]]
+name = "dnspython"
+version = "2.5.0"
+description = "DNS toolkit"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.extras]
+dev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=5.0.3)", "mypy (>=1.0.1)", "pylint (>=2.7)", "pytest-cov (>=3.0.0)", "pytest (>=6.2.5)", "sphinx (>=7.0.0)", "twine (>=4.0.0)", "wheel (>=0.41.0)"]
+dnssec = ["cryptography (>=41)"]
+doh = ["h2 (>=4.1.0)", "httpcore (>=0.17.3)", "httpx (>=0.25.1)"]
+doq = ["aioquic (>=0.9.20)"]
+idna = ["idna (>=2.1)"]
+trio = ["trio (>=0.14)"]
+wmi = ["wmi (>=1.5.1)"]
+
+[[package]]
+name = "ecdsa"
+version = "0.18.0"
+description = "ECDSA cryptographic signature library (pure python)"
+category = "main"
+optional = false
+python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
+
+[package.dependencies]
+six = ">=1.9.0"
+
+[package.extras]
+gmpy = ["gmpy"]
+gmpy2 = ["gmpy2"]
+
+[[package]]
+name = "email-validator"
+version = "1.3.1"
+description = "A robust email address syntax and deliverability validation library."
+category = "main"
+optional = false
+python-versions = ">=3.5"
+
+[package.dependencies]
+dnspython = ">=1.15.0"
+idna = ">=2.0.0"
+
+[[package]]
+name = "emails"
+version = "0.6"
+description = "Modern python library for emails."
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+chardet = "*"
+cssutils = "*"
+lxml = "*"
+premailer = "*"
+python-dateutil = "*"
+requests = "*"
+
+[[package]]
+name = "evolved5g"
+version = "1.0.13"
+description = "Evolved5G CLI prototype"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+certifi = ">=2021.10.8,<2021.11.0"
+Click = "8.0.1"
+cookiecutter = "2.1.1"
+coverage = "4.5.4"
+flake8 = "3.9.2"
+invoke = "1.6.0"
+pyopenssl = "22.1.0"
+pytest = "*"
+requests = "2.26.0"
+six = ">=1.16.0,<1.17.0"
+typing-extensions = "3.10.0.2"
+urllib3 = ">=1.26.7,<1.27.0"
+watchdog = "0.9.0"
+
+[[package]]
+name = "exceptiongroup"
+version = "1.2.0"
+description = "Backport of PEP 654 (exception groups)"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.extras]
+test = ["pytest (>=6)"]
+
+[[package]]
+name = "fastapi"
+version = "0.78.0"
+description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
+category = "main"
+optional = false
+python-versions = ">=3.6.1"
+
+[package.dependencies]
+pydantic = ">=1.6.2,<1.7 || >1.7,<1.7.1 || >1.7.1,<1.7.2 || >1.7.2,<1.7.3 || >1.7.3,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0"
+starlette = "0.19.1"
+
+[package.extras]
+all = ["requests (>=2.24.0,<3.0.0)", "jinja2 (>=2.11.2,<4.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "itsdangerous (>=1.1.0,<3.0.0)", "pyyaml (>=5.3.1,<7.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "orjson (>=3.2.1,<4.0.0)", "email_validator (>=1.1.1,<2.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)"]
+dev = ["python-jose[cryptography] (>=3.3.0,<4.0.0)", "passlib[bcrypt] (>=1.7.2,<2.0.0)", "autoflake (>=1.4.0,<2.0.0)", "flake8 (>=3.8.3,<4.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)", "pre-commit (>=2.17.0,<3.0.0)"]
+doc = ["mkdocs (>=1.1.2,<2.0.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mdx-include (>=1.4.1,<2.0.0)", "mkdocs-markdownextradata-plugin (>=0.1.7,<0.3.0)", "typer (>=0.4.1,<0.5.0)", "pyyaml (>=5.3.1,<7.0.0)"]
+test = ["pytest (>=6.2.4,<7.0.0)", "pytest-cov (>=2.12.0,<4.0.0)", "mypy (==0.910)", "flake8 (>=3.8.3,<4.0.0)", "black (==22.3.0)", "isort (>=5.0.6,<6.0.0)", "requests (>=2.24.0,<3.0.0)", "httpx (>=0.14.0,<0.19.0)", "email_validator (>=1.1.1,<2.0.0)", "sqlalchemy (>=1.3.18,<1.5.0)", "peewee (>=3.13.3,<4.0.0)", "databases[sqlite] (>=0.3.2,<0.6.0)", "orjson (>=3.2.1,<4.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "flask (>=1.1.2,<3.0.0)", "anyio[trio] (>=3.2.1,<4.0.0)", "types-ujson (==4.2.1)", "types-orjson (==3.6.2)", "types-dataclasses (==0.6.5)"]
+
+[[package]]
+name = "flake8"
+version = "3.9.2"
+description = "the modular source code checker: pep8 pyflakes and co"
+category = "main"
+optional = false
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"
+
+[package.dependencies]
+mccabe = ">=0.6.0,<0.7.0"
+pycodestyle = ">=2.7.0,<2.8.0"
+pyflakes = ">=2.3.0,<2.4.0"
+
+[[package]]
+name = "greenlet"
+version = "3.0.3"
+description = "Lightweight in-process concurrent programming"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.extras]
+docs = ["sphinx", "furo"]
+test = ["objgraph", "psutil"]
+
+[[package]]
+name = "gunicorn"
+version = "20.1.0"
+description = "WSGI HTTP Server for UNIX"
+category = "main"
+optional = false
+python-versions = ">=3.5"
+
+[package.extras]
+eventlet = ["eventlet (>=0.24.1)"]
+gevent = ["gevent (>=1.4.0)"]
+setproctitle = ["setproctitle"]
+tornado = ["tornado (>=0.2)"]
+
+[[package]]
+name = "h11"
+version = "0.14.0"
+description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "idna"
+version = "3.6"
+description = "Internationalized Domain Names in Applications (IDNA)"
+category = "main"
+optional = false
+python-versions = ">=3.5"
+
+[[package]]
+name = "iniconfig"
+version = "2.0.0"
+description = "brain-dead simple config-ini parsing"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "invoke"
+version = "1.6.0"
+description = "Pythonic task execution"
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "isort"
+version = "4.3.21"
+description = "A Python utility / library to sort Python imports."
+category = "dev"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
+
+[package.extras]
+pipfile = ["pipreqs", "requirementslib"]
+pyproject = ["toml"]
+requirements = ["pipreqs", "pip-api"]
+xdg_home = ["appdirs (>=1.4.0)"]
+
+[[package]]
+name = "jinja2"
+version = "3.0.3"
+description = "A very fast and expressive template engine."
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+MarkupSafe = ">=2.0"
+
+[package.extras]
+i18n = ["Babel (>=2.7)"]
+
+[[package]]
+name = "jinja2-time"
+version = "0.2.0"
+description = "Jinja2 Extension for Dates and Times"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+arrow = "*"
+jinja2 = "*"
+
+[[package]]
+name = "lxml"
+version = "5.1.0"
+description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.extras]
+cssselect = ["cssselect (>=0.7)"]
+html5 = ["html5lib"]
+htmlsoup = ["beautifulsoup4"]
+source = ["Cython (>=3.0.7)"]
+
+[[package]]
+name = "markupsafe"
+version = "2.1.5"
+description = "Safely add untrusted strings to HTML/XML markup."
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "mccabe"
+version = "0.6.1"
+description = "McCabe checker, plugin for flake8"
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "mypy"
+version = "0.770"
+description = "Optional static typing for Python"
+category = "dev"
+optional = false
+python-versions = ">=3.5"
+
+[package.dependencies]
+mypy-extensions = ">=0.4.3,<0.5.0"
+typed-ast = ">=1.4.0,<1.5.0"
+typing-extensions = ">=3.7.4"
+
+[package.extras]
+dmypy = ["psutil (>=4.0)"]
+
+[[package]]
+name = "mypy-extensions"
+version = "0.4.4"
+description = "Experimental type system extensions for programs checked with the mypy typechecker."
+category = "dev"
+optional = false
+python-versions = ">=2.7"
+
+[[package]]
+name = "packaging"
+version = "23.2"
+description = "Core utilities for Python packages"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "passlib"
+version = "1.7.4"
+description = "comprehensive password hashing framework supporting over 30 schemes"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+bcrypt = {version = ">=3.1.0", optional = true, markers = "extra == \"bcrypt\""}
+
+[package.extras]
+argon2 = ["argon2-cffi (>=18.2.0)"]
+bcrypt = ["bcrypt (>=3.1.0)"]
+build_docs = ["sphinx (>=1.6)", "sphinxcontrib-fulltoc (>=1.2.0)", "cloud-sptheme (>=1.10.1)"]
+totp = ["cryptography"]
+
+[[package]]
+name = "pathspec"
+version = "0.12.1"
+description = "Utility library for gitignore style pattern matching of file paths."
+category = "dev"
+optional = false
+python-versions = ">=3.8"
+
+[[package]]
+name = "pathtools"
+version = "0.1.2"
+description = "File system general utilities"
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "pluggy"
+version = "1.4.0"
+description = "plugin and hook calling mechanisms for python"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.extras]
+dev = ["pre-commit", "tox"]
+testing = ["pytest", "pytest-benchmark"]
+
+[[package]]
+name = "premailer"
+version = "3.10.0"
+description = "Turns CSS blocks into style attributes"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+cachetools = "*"
+cssselect = "*"
+cssutils = "*"
+lxml = "*"
+requests = "*"
+
+[package.extras]
+dev = ["therapist", "tox", "twine", "black", "flake8", "wheel"]
+test = ["nose", "mock"]
+
+[[package]]
+name = "psycopg2-binary"
+version = "2.9.9"
+description = "psycopg2 - Python-PostgreSQL Database Adapter"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "pyasn1"
+version = "0.5.1"
+description = "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)"
+category = "main"
+optional = false
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"
+
+[[package]]
+name = "pycodestyle"
+version = "2.7.0"
+description = "Python style guide checker"
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
+
+[[package]]
+name = "pycparser"
+version = "2.21"
+description = "C parser in Python"
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
+
+[[package]]
+name = "pydantic"
+version = "1.9.2"
+description = "Data validation and settings management using python type hints"
+category = "main"
+optional = false
+python-versions = ">=3.6.1"
+
+[package.dependencies]
+typing-extensions = ">=3.7.4.3"
+
+[package.extras]
+dotenv = ["python-dotenv (>=0.10.4)"]
+email = ["email-validator (>=1.0.3)"]
+
+[[package]]
+name = "pyflakes"
+version = "2.3.1"
+description = "passive checker of Python programs"
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
+
+[[package]]
+name = "pymongo"
+version = "4.6.1"
+description = "Python driver for MongoDB <http://www.mongodb.org>"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+dnspython = ">=1.16.0,<3.0.0"
+
+[package.extras]
+aws = ["pymongo-auth-aws (<2.0.0)"]
+encryption = ["pymongo", "pymongocrypt (>=1.6.0,<2.0.0)", "certifi"]
+gssapi = ["pykerberos", "winkerberos (>=0.5.0)"]
+ocsp = ["pyopenssl (>=17.2.0)", "requests (<3.0.0)", "cryptography (>=2.5)", "service-identity (>=18.1.0)", "certifi"]
+snappy = ["python-snappy"]
+test = ["pytest (>=7)"]
+zstd = ["zstandard"]
+
+[[package]]
+name = "pyopenssl"
+version = "22.1.0"
+description = "Python wrapper module around the OpenSSL library"
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+cryptography = ">=38.0.0,<39"
+
+[package.extras]
+docs = ["sphinx (!=5.2.0,!=5.2.0.post0)", "sphinx-rtd-theme"]
+test = ["flaky", "pretend", "pytest (>=3.0.1)"]
+
+[[package]]
+name = "pytest"
+version = "8.0.0"
+description = "pytest: simple powerful testing with Python"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[package.dependencies]
+colorama = {version = "*", markers = "sys_platform == \"win32\""}
+exceptiongroup = {version = ">=1.0.0rc8", markers = "python_version < \"3.11\""}
+iniconfig = "*"
+packaging = "*"
+pluggy = ">=1.3.0,<2.0"
+tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}
+
+[package.extras]
+testing = ["argcomplete", "attrs (>=19.2.0)", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "setuptools", "xmlschema"]
+
+[[package]]
+name = "pytest-cov"
+version = "2.10.1"
+description = "Pytest plugin for measuring coverage."
+category = "dev"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
+
+[package.dependencies]
+coverage = ">=4.4"
+pytest = ">=4.6"
+
+[package.extras]
+testing = ["fields", "hunter", "process-tests (==2.0.2)", "six", "pytest-xdist", "virtualenv"]
+
+[[package]]
+name = "python-dateutil"
+version = "2.8.2"
+description = "Extensions to the standard Python datetime module"
+category = "main"
+optional = false
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
+
+[package.dependencies]
+six = ">=1.5"
+
+[[package]]
+name = "python-jose"
+version = "3.3.0"
+description = "JOSE implementation in Python"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+cryptography = {version = ">=3.4.0", optional = true, markers = "extra == \"cryptography\""}
+ecdsa = "!=0.15"
+pyasn1 = "*"
+rsa = "*"
+
+[package.extras]
+cryptography = ["cryptography (>=3.4.0)"]
+pycrypto = ["pycrypto (>=2.6.0,<2.7.0)", "pyasn1"]
+pycryptodome = ["pycryptodome (>=3.3.1,<4.0.0)", "pyasn1"]
+
+[[package]]
+name = "python-multipart"
+version = "0.0.5"
+description = "A streaming multipart parser for Python"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+six = ">=1.4.0"
+
+[[package]]
+name = "python-slugify"
+version = "8.0.4"
+description = "A Python slugify application that also handles Unicode"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+text-unidecode = ">=1.3"
+
+[package.extras]
+unidecode = ["Unidecode (>=1.1.1)"]
+
+[[package]]
+name = "pyyaml"
+version = "6.0.1"
+description = "YAML parser and emitter for Python"
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[[package]]
+name = "raven"
+version = "6.10.0"
+description = "Raven is a client for Sentry (https://getsentry.com)"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.extras]
+flask = ["Flask (>=0.8)", "blinker (>=1.1)"]
+tests = ["bottle", "celery (>=2.5)", "coverage (<4)", "exam (>=0.5.2)", "flake8 (==3.5.0)", "logbook", "mock", "nose", "pytz", "pytest (>=3.2.0,<3.3.0)", "pytest-timeout (==1.2.1)", "pytest-xdist (==1.18.2)", "pytest-pythonpath (==0.7.2)", "pytest-cov (==2.5.1)", "pytest-flake8 (==1.0.0)", "requests", "tornado (>=4.1,<5.0)", "tox", "webob", "webtest", "wheel", "anyjson", "zconfig", "Flask (>=0.8)", "blinker (>=1.1)", "Flask-Login (>=0.2.0)", "blinker (>=1.1)", "sanic (>=0.7.0)", "aiohttp"]
+
+[[package]]
+name = "regex"
+version = "2023.12.25"
+description = "Alternative regular expression module, to replace re."
+category = "dev"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "requests"
+version = "2.26.0"
+description = "Python HTTP for Humans."
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"
+
+[package.dependencies]
+certifi = ">=2017.4.17"
+charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
+idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
+urllib3 = ">=1.21.1,<1.27"
+
+[package.extras]
+socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
+use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]
+
+[[package]]
+name = "rsa"
+version = "4.9"
+description = "Pure-Python RSA implementation"
+category = "main"
+optional = false
+python-versions = ">=3.6,<4"
+
+[package.dependencies]
+pyasn1 = ">=0.1.3"
+
+[[package]]
+name = "six"
+version = "1.16.0"
+description = "Python 2 and 3 compatibility utilities"
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
+
+[[package]]
+name = "sniffio"
+version = "1.3.0"
+description = "Sniff out which async library your code is running under"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "sqlalchemy"
+version = "1.4.51"
+description = "Database Abstraction Library"
+category = "main"
+optional = false
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"
+
+[package.dependencies]
+greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}
+
+[package.extras]
+asyncio = ["greenlet (!=0.4.17)"]
+mypy = ["mypy (>=0.910)", "sqlalchemy2-stubs"]
+mssql = ["pyodbc"]
+mssql-pymssql = ["pymssql"]
+mssql-pyodbc = ["pyodbc"]
+mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
+mysql-connector = ["mysql-connector-python"]
+mariadb-connector = ["mariadb (>=1.0.1,!=1.1.2)"]
+oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
+postgresql = ["psycopg2 (>=2.7)"]
+postgresql-pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
+postgresql-asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
+postgresql-psycopg2binary = ["psycopg2-binary"]
+postgresql-psycopg2cffi = ["psycopg2cffi"]
+pymysql = ["pymysql", "pymysql (<1)"]
+aiomysql = ["greenlet (!=0.4.17)", "aiomysql (>=0.2.0)"]
+asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
+aiosqlite = ["greenlet (!=0.4.17)", "aiosqlite", "typing_extensions (!=3.10.0.1)"]
+sqlcipher = ["sqlcipher3-binary"]
+
+[[package]]
+name = "sqlalchemy-stubs"
+version = "0.3"
+description = "SQLAlchemy stubs and mypy plugin"
+category = "dev"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+mypy = ">=0.720"
+typing-extensions = ">=3.7.4"
+
+[[package]]
+name = "starlette"
+version = "0.19.1"
+description = "The little ASGI library that shines."
+category = "main"
+optional = false
+python-versions = ">=3.6"
+
+[package.dependencies]
+anyio = ">=3.4.0,<5"
+
+[package.extras]
+full = ["itsdangerous", "jinja2", "python-multipart", "pyyaml", "requests"]
+
+[[package]]
+name = "tenacity"
+version = "6.3.1"
+description = "Retry code until it succeeds"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+six = ">=1.9.0"
+
+[package.extras]
+doc = ["reno", "sphinx", "tornado (>=4.5)"]
+
+[[package]]
+name = "text-unidecode"
+version = "1.3"
+description = "The most basic Text::Unidecode port"
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "toml"
+version = "0.10.2"
+description = "Python Library for Tom's Obvious, Minimal Language"
+category = "dev"
+optional = false
+python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
+
+[[package]]
+name = "tomli"
+version = "2.0.1"
+description = "A lil' TOML parser"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[[package]]
+name = "typed-ast"
+version = "1.4.3"
+description = "a fork of Python 2 and 3 ast modules with type comment support"
+category = "dev"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "types-python-dateutil"
+version = "2.8.19.20240106"
+description = "Typing stubs for python-dateutil"
+category = "main"
+optional = false
+python-versions = ">=3.8"
+
+[[package]]
+name = "typing-extensions"
+version = "3.10.0.2"
+description = "Backported and Experimental Type Hints for Python 3.5+"
+category = "main"
+optional = false
+python-versions = "*"
+
+[[package]]
+name = "urllib3"
+version = "1.26.18"
+description = "HTTP library with thread-safe connection pooling, file post, and more."
+category = "main"
+optional = false
+python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"
+
+[package.extras]
+brotli = ["brotlicffi (>=0.8.0)", "brotli (==1.0.9)", "brotlipy (>=0.6.0)", "brotli (>=1.0.9)"]
+secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
+socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]
+
+[[package]]
+name = "uvicorn"
+version = "0.17.6"
+description = "The lightning-fast ASGI server."
+category = "main"
+optional = false
+python-versions = ">=3.7"
+
+[package.dependencies]
+asgiref = ">=3.4.0"
+click = ">=7.0"
+h11 = ">=0.8"
+
+[package.extras]
+standard = ["websockets (>=10.0)", "httptools (>=0.4.0)", "watchgod (>=0.6)", "python-dotenv (>=0.13)", "PyYAML (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "colorama (>=0.4)"]
+
+[[package]]
+name = "watchdog"
+version = "0.9.0"
+description = "Filesystem events monitoring"
+category = "main"
+optional = false
+python-versions = "*"
+
+[package.dependencies]
+argh = ">=0.24.1"
+pathtools = ">=0.1.1"
+PyYAML = ">=3.10"
+
+[metadata]
+lock-version = "1.1"
+python-versions = "~3.10"
+content-hash = "21dd5dd99bc8b645855cfef018f40ee38f97d7c02c4ac26a631aaa1effd5de2e"
+
+[metadata.files]
+aiofiles = []
+anyio = []
+appdirs = []
+argh = []
+arrow = []
+asgiref = []
+attrs = []
+autoflake = []
+bcrypt = []
+binaryornot = []
+black = []
+cachetools = []
+certifi = []
+cffi = []
+chardet = []
+charset-normalizer = []
+click = []
+colorama = []
+cookiecutter = []
+coverage = []
+cryptography = []
+cssselect = []
+cssutils = []
+dnspython = []
+ecdsa = []
+email-validator = []
+emails = []
+evolved5g = []
+exceptiongroup = []
+fastapi = []
+flake8 = []
+greenlet = []
+gunicorn = []
+h11 = []
+idna = []
+iniconfig = []
+invoke = []
+isort = []
+jinja2 = []
+jinja2-time = []
+lxml = []
+markupsafe = []
+mccabe = []
+mypy = []
+mypy-extensions = []
+packaging = []
+passlib = []
+pathspec = []
+pathtools = []
+pluggy = []
+premailer = []
+psycopg2-binary = []
+pyasn1 = []
+pycodestyle = []
+pycparser = []
+pydantic = []
+pyflakes = []
+pymongo = []
+pyopenssl = []
+pytest = []
+pytest-cov = []
+python-dateutil = []
+python-jose = []
+python-multipart = []
+python-slugify = []
+pyyaml = []
+raven = []
+regex = []
+requests = []
+rsa = []
+six = []
+sniffio = []
+sqlalchemy = []
+sqlalchemy-stubs = []
+starlette = []
+tenacity = []
+text-unidecode = []
+toml = []
+tomli = []
+typed-ast = []
+types-python-dateutil = []
+typing-extensions = []
+urllib3 = []
+uvicorn = []
+watchdog = []
Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yml b/docker-compose.yml
--- a/docker-compose.yml	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/docker-compose.yml	(date 1714229994210)
@@ -36,7 +36,7 @@
     profiles: ["debug", "dev"]
     volumes:
       - app-mongo-db-data:/data/db
-    restart: always
+    restart: unless-stopped
     env_file:
       - .env
     environment:
@@ -48,7 +48,7 @@
   mongo-express:
     image: mongo-express:1.0.0-alpha.4
     profiles: ["debug"]
-    restart: always
+    restart: unless-stopped
     ports:
       - 8081:8081
     env_file:
@@ -61,7 +61,7 @@
     networks:
       - services_default
 
-  
+
   backend:
     image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
     profiles: ["debug", "dev"]
@@ -70,6 +70,8 @@
       - ./backend/app:/app
     env_file:
       - .env
+    ports:
+      - "4444:4444"
     environment:
       - SERVER_NAME=${DOMAIN?Variable not set}
       - SERVER_HOST=https://${DOMAIN?Variable not set}
@@ -83,7 +85,7 @@
         INSTALL_JUPYTER: ${INSTALL_JUPYTER-true}
     extra_hosts:
       - "host.docker.internal:host-gateway"
-    restart: always
+    restart: unless-stopped
     networks:
       - services_default
 
@@ -119,6 +121,7 @@
 networks:
     services_default:
       external: ${EXTERNAL_NET}
+      name: services_default
 
 
 volumes:
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1707765911448)
+++ b/.idea/misc.xml	(date 1707765911448)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Python 3.10 (nwdaf_sub_collector)" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/app/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/main.py b/backend/app/app/main.py
--- a/backend/app/app/main.py	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/main.py	(date 1707845175996)
@@ -9,8 +9,12 @@
 from fastapi.templating import Jinja2Templates
 from fastapi.responses import HTMLResponse
 from fastapi.responses import RedirectResponse
+from app.schemas import NefEventNotification
+from app.tools.monitoring_callbacks import location_callback
 
 # ================================= Main Application - NEF Emulator =================================
+
+
 app = FastAPI(title=settings.PROJECT_NAME,
               openapi_url=f"{settings.API_V1_STR}/openapi.json")
 
Index: backend/app/app/schemas/NefEventExposureSubsc.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/schemas/NefEventExposureSubsc.py b/backend/app/app/schemas/NefEventExposureSubsc.py
new file mode 100644
--- /dev/null	(date 1707775424100)
+++ b/backend/app/app/schemas/NefEventExposureSubsc.py	(date 1707775424100)
@@ -0,0 +1,111 @@
+from uuid import UUID
+from typing import Optional
+from pydantic import BaseModel
+from enum import Enum
+
+from app.schemas.NefEventNotification import NefEvent, NefEventNotification, Ecgi, Ncgi, GlobalRanNodeId, Tai
+
+
+class TargetUeIdentification(BaseModel):
+    supis: Optional[list[str]]
+    interGroupIds: Optional[list[str]]
+    anyUeId: Optional[bool]
+
+class NetworkAreaInfo(BaseModel):
+    id: Optional[UUID]
+    ecgis: Optional[list[Ecgi]]
+    ncgis: Optional[list[Ncgi]]
+    gRanNodeIds: Optional[list[GlobalRanNodeId]]
+    tais: Optional[list[Tai]]
+    containedAreaIds: Optional[list[UUID]]
+
+class CollectiveBehaviourFilterType(Enum):
+    COLLECTIVE_ATTRIBUTE = "COLLECTIVE_ATTRIBUTE"
+    DATA_PROCESSING = "DATA_PROCESSING"
+
+class CollectiveBehaviourFilter(BaseModel):
+    type: Optional[CollectiveBehaviourFilterType]
+    value: Optional[str]
+    listOfUeInd: Optional[list[bool]]
+
+class NefEventFilter(BaseModel):
+    tgtUe: Optional[TargetUeIdentification]
+    appIds: Optional[list[str]]
+    locArea: Optional[NetworkAreaInfo]
+    collAttrs: Optional[list[CollectiveBehaviourFilter]]
+
+class PartitioningCriteriaEnum(Enum):
+    TAC = "TAC"
+    SUBPLMN = "SUBPLMN"
+    GEOAREA = "GEOAREA"
+    SNSSAI = "SNSSAI"
+    DNN = "DNN"
+class PartitioningCriteria(BaseModel):
+    value: Optional[PartitioningCriteriaEnum]
+
+class NotificationMethodEnum(Enum):
+    THRESHOLD = "THRESHOLD"
+    PERIODIC = "PERIODIC"
+class NotificationMethod(BaseModel):
+    notifMethod: Optional[NotificationMethodEnum]
+
+class NotificationFlagEnum(Enum):
+    ACTIVATE = "ACTIVATE"
+    DEACTIVATE = "DEACTIVATE"
+    RETRIEVAL = "RETRIEVAL"
+class NotificationFlag(BaseModel):
+    value: Optional[NotificationFlagEnum]
+
+class CommunicationCollection(BaseModel):
+    startTime: str
+    endTime: str
+    ulVol: int
+    dlVol: int
+
+class ReportingInformation(BaseModel):
+    immRep: Optional[bool]
+    notifMethod: Optional[NotificationMethod]
+    maxReportNbr: Optional[int]
+    monDur: Optional[str]
+    repPeriod: Optional[int]
+    sampRatio: Optional[int]
+    partitionCriteria: Optional[list[PartitioningCriteria]]
+    grpRepTime: Optional[int]
+    notifFlag: Optional[NotificationFlag]
+
+class NefEventSubs(BaseModel):
+    event: Optional[NefEvent]
+    eventFilter: Optional[NefEventFilter]
+    supi: Optional[str]
+    interGroupId: Optional[str]
+    appId: Optional[str]
+    comms: Optional[list[CommunicationCollection]]
+
+class NefEventExposureSubsc(BaseModel):
+    dataAccProfId: Optional[str]
+    eventsSubs: Optional[list[NefEventSubs]]
+    eventsRepInfo: Optional[ReportingInformation]
+    notifUri: Optional[str]
+    eventNotifs: Optional[list[NefEventNotification]]
+    notifId: Optional[str]
+    suppFeat: Optional[str]
+
+if __name__ == '__main__':
+    sub = NefEventExposureSubsc(
+        dataAccProfId='',
+        eventsSubs=[{
+            "event": NefEvent.UE_MOBILITY
+        }],
+        eventsRepInfo={
+            "immRep": True,
+            "notifMethod": {
+                "value": NotificationMethodEnum.PERIODIC
+            },
+            "repPeriod": 1
+        },
+        eventNotifs=[NefEventNotification()],
+        suppFeat='10101010',
+        notifId='11122233',
+        notifUri='http://localhost:'
+    )
+    print(sub.json())
\ No newline at end of file
Index: backend/app/app/backend_pre_start.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/backend_pre_start.py b/backend/app/app/backend_pre_start.py
--- a/backend/app/app/backend_pre_start.py	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/backend_pre_start.py	(date 1707844868254)
@@ -1,7 +1,7 @@
 import logging
 from tenacity import after_log, before_log, retry, stop_after_attempt, wait_fixed
 from app.db.session import SessionLocal
-
+from app.tools.monitoring_callbacks import location_callback
 
 logging.basicConfig(level=logging.INFO)
 logger = logging.getLogger(__name__)
@@ -21,6 +21,9 @@
         db = SessionLocal()
         # Try to create session to check if DB is awake
         db.execute("SELECT 1")
+        print("trying to location callback:")
+        print(location_callback({"external_identifier": "id1", "ipv4Addr": "192.168.1.1"},
+                                "http://192.168.1.75:8091/nefeventexposure/notify", ""))
     except Exception as e:
         logger.error(e)
         raise e
Index: backend/app/app/core/capif_files/service_as_session_with_qos.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/core/capif_files/service_as_session_with_qos.json b/backend/app/app/core/capif_files/service_as_session_with_qos.json
--- a/backend/app/app/core/capif_files/service_as_session_with_qos.json	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/core/capif_files/service_as_session_with_qos.json	(date 1716722943457)
@@ -1,1 +1,1 @@
-{"apiName": "/nef/api/v1/3gpp-as-session-with-qos/", "aefProfiles": [{"aefId": "string", "versions": [{"apiVersion": "v1", "expiry": "2100-11-30T10:32:02.004Z", "resources": [{"resourceName": "QOS_SUBSCRIPTIONS", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions", "custOpName": "http_post", "operations": ["GET", "POST"], "description": "Endpoint to manage monitoring subscriptions"}, {"resourceName": "QOS_SUBSCRIPTION_SINGLE", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions/{subscriptionId}", "custOpName": "http_get", "operations": ["GET", "PUT", "DELETE"], "description": "Endpoint to manage single subscription"}], "custOperations": [{"commType": "REQUEST_RESPONSE", "custOpName": "string", "operations": ["POST"], "description": "string"}]}], "protocol": "HTTP_1_1", "dataFormat": "JSON", "securityMethods": ["OAUTH", "PSK"], "interfaceDescriptions": [{"ipv4Addr": "127.0.0.1", "port": 4443, "securityMethods": ["OAUTH"]}]}], "description": "API of dummy netapp to test", "supportedFeatures": "fffff", "shareableInfo": {"isShareable": true, "capifProvDoms": ["string"]}, "serviceAPICategory": "string", "apiSuppFeats": "fffff", "pubApiPath": {"ccfIds": ["string"]}, "ccfId": "string"}
\ No newline at end of file
+{"apiName": "/nef/api/v1/3gpp-as-session-with-qos/", "aefProfiles": [{"aefId": "string", "versions": [{"apiVersion": "v1", "expiry": "2100-11-30T10:32:02.004Z", "resources": [{"resourceName": "QOS_SUBSCRIPTIONS", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions", "custOpName": "http_post", "operations": ["GET", "POST"], "description": "Endpoint to manage monitoring subscriptions"}, {"resourceName": "QOS_SUBSCRIPTION_SINGLE", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions/{subscriptionId}", "custOpName": "http_get", "operations": ["GET", "PUT", "DELETE"], "description": "Endpoint to manage single subscription"}], "custOperations": [{"commType": "REQUEST_RESPONSE", "custOpName": "string", "operations": ["POST"], "description": "string"}]}], "protocol": "HTTP_1_1", "dataFormat": "JSON", "securityMethods": ["OAUTH", "PSK"], "domainName": "nefemu.com"}], "description": "API of dummy netapp to test", "supportedFeatures": "fffff", "shareableInfo": {"isShareable": true, "capifProvDoms": ["string"]}, "serviceAPICategory": "string", "apiSuppFeats": "fffff", "pubApiPath": {"ccfIds": ["string"]}, "ccfId": "string"}
\ No newline at end of file
Index: backend/app/app/core/capif_files/service_monitoring_event.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/core/capif_files/service_monitoring_event.json b/backend/app/app/core/capif_files/service_monitoring_event.json
--- a/backend/app/app/core/capif_files/service_monitoring_event.json	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/core/capif_files/service_monitoring_event.json	(date 1716722943457)
@@ -1,1 +1,1 @@
-{"apiName": "/nef/api/v1/3gpp-monitoring-event/", "aefProfiles": [{"aefId": "string", "versions": [{"apiVersion": "v1", "expiry": "2100-11-30T10:32:02.004Z", "resources": [{"resourceName": "MONITORING_SUBSCRIPTIONS", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions", "custOpName": "http_post", "operations": ["GET", "POST"], "description": "Endpoint to manage monitoring subscriptions"}, {"resourceName": "MONITORING_SUBSCRIPTION_SINGLE", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions/{subscriptionId}", "custOpName": "http_get", "operations": ["GET", "PUT", "DELETE"], "description": "Endpoint to manage single subscription"}], "custOperations": [{"commType": "REQUEST_RESPONSE", "custOpName": "string", "operations": ["POST"], "description": "string"}]}], "protocol": "HTTP_1_1", "dataFormat": "JSON", "securityMethods": ["OAUTH", "PSK"], "interfaceDescriptions": [{"ipv4Addr": "127.0.0.1", "port": 4443, "securityMethods": ["OAUTH"]}]}], "description": "API of dummy netapp to test", "supportedFeatures": "fffff", "shareableInfo": {"isShareable": true, "capifProvDoms": ["string"]}, "serviceAPICategory": "string", "apiSuppFeats": "fffff", "pubApiPath": {"ccfIds": ["string"]}, "ccfId": "string"}
\ No newline at end of file
+{"apiName": "/nef/api/v1/3gpp-monitoring-event/", "aefProfiles": [{"aefId": "string", "versions": [{"apiVersion": "v1", "expiry": "2100-11-30T10:32:02.004Z", "resources": [{"resourceName": "MONITORING_SUBSCRIPTIONS", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions", "custOpName": "http_post", "operations": ["GET", "POST"], "description": "Endpoint to manage monitoring subscriptions"}, {"resourceName": "MONITORING_SUBSCRIPTION_SINGLE", "commType": "SUBSCRIBE_NOTIFY", "uri": "/{scsAsId}/subscriptions/{subscriptionId}", "custOpName": "http_get", "operations": ["GET", "PUT", "DELETE"], "description": "Endpoint to manage single subscription"}], "custOperations": [{"commType": "REQUEST_RESPONSE", "custOpName": "string", "operations": ["POST"], "description": "string"}]}], "protocol": "HTTP_1_1", "dataFormat": "JSON", "securityMethods": ["OAUTH", "PSK"], "domainName": "nefemu.com"}], "description": "API of dummy netapp to test", "supportedFeatures": "fffff", "shareableInfo": {"isShareable": true, "capifProvDoms": ["string"]}, "serviceAPICategory": "string", "apiSuppFeats": "fffff", "pubApiPath": {"ccfIds": ["string"]}, "ccfId": "string"}
\ No newline at end of file
Index: backend/app/app/schemas/NefEventNotification.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/schemas/NefEventNotification.py b/backend/app/app/schemas/NefEventNotification.py
new file mode 100644
--- /dev/null	(date 1707771801169)
+++ b/backend/app/app/schemas/NefEventNotification.py	(date 1707771801169)
@@ -0,0 +1,517 @@
+from typing import Optional
+from pydantic import BaseModel
+from enum import Enum
+
+
+class PlmnId(BaseModel):
+    mcc: Optional[str]
+    mnc: Optional[str]
+
+
+class Ecgi(BaseModel):
+    plmnId: Optional[PlmnId]
+    eutraCellId: Optional[str]
+    nid: Optional[str]
+
+
+class GeographicalCoordinates(BaseModel):
+    lon: Optional[float]
+    lat: Optional[float]
+
+
+class GNbId(BaseModel):
+    bitLength: Optional[int]
+    gNBValue: Optional[str]
+
+
+class Ncgi(BaseModel):
+    plmnId: Optional[PlmnId]
+    nrCellId: Optional[str]
+    nid: Optional[str]
+
+
+class Tai(BaseModel):
+    plmnId: Optional[PlmnId]
+    tac: Optional[str]
+    nid: Optional[str]
+
+
+class SupportedGADShapesEnum(Enum):
+    Point = "Point"
+    PointUncertaintyCircle = "PointUncertaintyCircle"
+    PointUncertaintyEllipse = "PointUncertaintyEllipse"
+    Polygon = "Polygon"
+    PointAltitude = "PointAltitude"
+    PointAltitudeUncertainty = "PointAltitudeUncertainty"
+    EllipsoidArc = "EllipsoidArc"
+    Local2dPointUncertaintyEllipse = "Local2dPointUncertaintyEllipse"
+    Local3dPointUncertaintyEllipse = "Local3dPointUncertaintyEllipse"
+
+
+class SupportedGADShapes(BaseModel):
+    supportedGADShapes: Optional[SupportedGADShapesEnum]
+
+
+class GlobalRanNodeId(BaseModel):
+    plmnId: Optional[PlmnId]
+    ngeNbId: Optional[str]
+    eNbId: Optional[str]
+    gNbId: Optional[GNbId]
+    n3IwfId: Optional[str]
+    wagfId: Optional[str]
+    tngfId: Optional[str]
+    nid: Optional[str]
+
+
+class PointUncertaintyCircle(BaseModel):
+    point: Optional[GeographicalCoordinates]
+    uncertainty: Optional[float]
+    type: Optional[str]
+    shape: Optional[SupportedGADShapes]
+
+
+class NrLocation(BaseModel):
+    tai: Optional[Tai]
+    ncgi: Optional[Ncgi]
+    ignoreNcgi: Optional[bool]
+    ageOfLocationInformation: Optional[int]
+    ueLocationTimestamp: Optional[str]
+    geographicalInformation: Optional[str]
+    pointUncertaintyCircle: Optional[PointUncertaintyCircle]
+    geodeticInformation: Optional[str]
+    globalGnbId: Optional[GlobalRanNodeId]
+
+
+class EutraLocation(BaseModel):
+    tai: Optional[Tai]
+    ignoreTai: Optional[bool]
+    ecgi: Optional[Ecgi]
+    ignoreEcgi: Optional[bool]
+    ageOfLocationInformation: Optional[int]
+    ueLocationTimestamp: Optional[str]
+    geographicalInformation: Optional[str]
+    geodeticInformation: Optional[str]
+    globalNgenbId: Optional[GlobalRanNodeId]
+    globalENbId: Optional[GlobalRanNodeId]
+
+
+class UserLocation(BaseModel):
+    eutraLocation: Optional[EutraLocation]
+    nrLocation: Optional[NrLocation]
+
+
+class UeTrajectoryInfo(BaseModel):
+    ts: Optional[str]
+    location: Optional[UserLocation]
+
+
+class UeMobilityInfo(BaseModel):
+    supi: Optional[str]
+    appId: Optional[str]
+    ueTrajs: Optional[list[UeTrajectoryInfo]]
+
+
+class NefEvent(Enum):
+    UE_MOBILITY = "UE_MOBILITY"
+    UE_COMM = "UE_COMM"
+    SVC_EXPERIENCE = "SVC_EXPERIENCE"
+    EXCEPTIONS = "EXCEPTIONS"
+    USER_DATA_CONGESTION = "USER_DATA_CONGESTION"
+    PERF_DATA = "PERF_DATA"
+    DISPERSION = "DISPERSION"
+    COLLECTIVE_BEHAVIOUR = "COLLECTIVE_BEHAVIOUR"
+    MS_QOE_METRICS = "MS_QOE_METRICS"
+    MS_CONSUMPTION = "MS_CONSUMPTION"
+    MS_NET_ASSIST_INVOCATION = "MS_NET_ASSIST_INVOCATION"
+    MS_DYN_POLICY_INVOCATION = "MS_DYN_POLICY_INVOCATION"
+    MS_ACCESS_ACTIVITY = "MS_ACCESS_ACTIVITY"
+
+
+class NefEventNotification(BaseModel):
+    event: Optional[NefEvent]
+    timeStamp: Optional[str]
+    ueMobilityInfos: Optional[list[UeMobilityInfo]]
+
+
+if __name__ == '__main__':
+    nefNotification = NefEventNotification(
+        event="UE_MOBILITY", timeStamp="2024-02-12T23:02:24+02:00",
+        ueMobilityInfos=[
+            {"supi": "202010000000003", "appId": "appID", "ueTrajs": [{"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}}]},
+            {"supi": "202010000000003", "appId": "appID", "ueTrajs": [{"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}}]},
+            {"supi": "202010000000003", "appId": "appID", "ueTrajs": [{"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}}]},
+            {"supi": "202010000000003", "appId": "appID", "ueTrajs": [{"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}}]},
+            {"supi": "202010000000003", "appId": "appID", "ueTrajs": [{"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}},
+                                                                      {"ts": "2024-02-12T23:02:24+02:00",
+                                                                       "location": {"eutraLocation": None,
+                                                                                    "nrLocation": {"tai": None,
+                                                                                                   "ncgi": {"plmnId": {
+                                                                                                       "mcc": "123",
+                                                                                                       "mnc": "123"},
+                                                                                                       "nrCellId": "001"},
+                                                                                                   "ignoreNcgi": False,
+                                                                                                   "ueLocationTimestamp": "2024-02-12T23:02:24+02:00",
+                                                                                                   "geographicalInformation": "01010110101010110",
+                                                                                                   "pointUncertainyCircle": None,
+                                                                                                   "globalGnbId": None},
+                                                                                    "n3gaLocation": None,
+                                                                                    "utraLocation": None,
+                                                                                    "geraLocation": None}}]}]
+
+    )
+    print(nefNotification.json())
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1706458829116)
+++ b/.idea/modules.xml	(date 1706458829116)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/NEF_emulator.iml" filepath="$PROJECT_DIR$/.idea/NEF_emulator.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1706458829704)
+++ b/.idea/.gitignore	(date 1706458829704)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: backend/app/app/static/css/register.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/static/css/register.css b/backend/app/app/static/css/register.css
--- a/backend/app/app/static/css/register.css	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/static/css/register.css	(date 1712828135545)
@@ -1,2 +1,2 @@
 .card-body {position: relative;}
-.card-body .spinner-grow {position: absolute; bottom: 1.5rem; right: 1.5rem;}}
+.card-body .spinner-grow {position: absolute; bottom: 1.5rem; right: 1.5rem;}
Index: backend/app/app/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/.idea/misc.xml b/backend/app/app/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1707766436372)
+++ b/backend/app/app/.idea/misc.xml	(date 1707766436372)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/app/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/.idea/workspace.xml b/backend/app/app/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1707766436364)
+++ b/backend/app/app/.idea/workspace.xml	(date 1707766436364)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="a900f0f0-58ae-4462-b464-ac71b60cb4d6" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 5
+}]]></component>
+  <component name="ProjectId" id="2cHR3GUuWY52NY65CnCyODDK9qI" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/home/thanlinardos/Documents/eclipse-projects-spring/nwdaf_sub_collector/NEF_emulator/backend/app",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.24597701",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-21.0.1-openjdk-21.0.1-3183f394aec4-920bfa72" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a900f0f0-58ae-4462-b464-ac71b60cb4d6" name="Changes" comment="" />
+      <created>1707766316467</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1707766316467</updated>
+      <workItem from="1707766317480" duration="119000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/app/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/.idea/modules.xml b/backend/app/app/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1707766436360)
+++ b/backend/app/app/.idea/modules.xml	(date 1707766436360)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/app.iml" filepath="$PROJECT_DIR$/.idea/app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: backend/app/app/.idea/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/.idea/app.iml b/backend/app/app/.idea/app.iml
new file mode 100644
--- /dev/null	(date 1707766436352)
+++ b/backend/app/app/.idea/app.iml	(date 1707766436352)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 3.10" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: env-file-for-local.dev
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/env-file-for-local.dev b/env-file-for-local.dev
--- a/env-file-for-local.dev	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/env-file-for-local.dev	(date 1707845987779)
@@ -6,7 +6,7 @@
 BACKEND_TAG=1.0
 DOCKER_IMAGE_FRONTEND=frontend
 # Backend
-SERVER_NAME=localhost
+SERVER_NAME=localhostF
 SERVER_HOST=localhost
 SERVER_PORT=8888
 BACKEND_CORS_ORIGINS=["https://5g-api-emulator.medianetlab.eu","http://localhost"]
@@ -58,7 +58,7 @@
 CAPIF_HOST=capifcore
 CAPIF_HTTP_PORT=8080
 CAPIF_HTTPS_PORT=443
-EXTERNAL_NET=true
+EXTERNAL_NET=false
 
 #Public Certificate for verifing access token
 USE_PUBLIC_KEY_VERIFICATION=true
Index: .idea/NEF_emulator.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/NEF_emulator.iml b/.idea/NEF_emulator.iml
new file mode 100644
--- /dev/null	(date 1707256229705)
+++ b/.idea/NEF_emulator.iml	(date 1707256229705)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 3.10 (nwdaf_sub_collector)" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1706458829128)
+++ b/.idea/vcs.xml	(date 1706458829128)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: nginx/certs/local-nef-ssl.p12
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/nginx/certs/local-nef-ssl.p12 b/nginx/certs/local-nef-ssl.p12
new file mode 100755
--- /dev/null	(date 1704657052446)
+++ b/nginx/certs/local-nef-ssl.p12	(date 1704657052446)
@@ -0,0 +1,41 @@
+0�
+�0�
+f	*�H��
+��
+W�
+S0�
+O0��	*�H��
+���0�� 0��	*�H��
+0W	*�H��
+
+0J0)	*�H��
+0�*�YM 0*�H��
+	 0	`�He*N�$Nw���������3�� |�S�-W���t^���gC ᑄ���eb���
+�_���]Rۀ�`�(�_�)��QG
+%>;Ux�9�#��Ą������2�Op��B��jBw�_X}��d�W��v}�mL�76�L��F����ڻ�_&݋����Cb�u��BU��o�Q��y�54�ZSm�����j{G�N ��X�2�"{��E?{D��kQ,�&B�pb�XbI�J���*��hdT��%�g
+~Po� K����bg5@�4
+�|����I'���H�&�mG�!���u�tiN.%�6��%�OZ=�G���GI� ��4#eq�}[r��B�4j�D��U��w!��N�qI�����3'j�Z��Xcl�st�z\Uȟcy\�����n��z�� R>�Iu�96ɕG���,,���u�����fc3ug}%��*��Cf�#�ja�K �
+{��V=�6�E�E@@�ȥ�kv��z��YQdw(����]��s��?�J	���ޙ�e��L��B�ڢ~_�f�wQՃ'=�����NދKjk3�&7�<��9�˔c��K�<���Oy{�S1���	���ZJl�γ���1��K���)�7�i8e��k�Ә��D��:>��5&!Lr��`ǲ�t�f]S��'�eG��"��^�/�a��Q ��Y�����%��%*r�ƗwO>�lZQ���e^���I[�|��0Ce,0L ��;�u�I�\\��q"�H�R�8l��\2��7�#�˸����(_%/�V+o����.
+�D�!dId�p�'����Q!�!�|�N��)�MY0�US���܁xU�#���P�GXn������k�b�n|�. �4�2��V^��!G�E=$��7���|i��h�>!�<O
+:@�d�ߜ���K��r�P�t���[���	�^X'���uإ�� ��d���
+@�&�z4��o������Y����=80A���
+7ZW@M5F��ҥ��~~��L����oc´��;%Yt�1I*v	W�f"%��D��ZV!6����������kh�jw��r�0��	*�H��
+�����0��0��*�H��
+
+��10�-0W	*�H��
+
+0J0)	*�H��
+0[��_�� 0*�H��
+	 0	`�He*B��M�b�����'���I�>�Q��dh�-����z���{d�(�
++͛���&͊}�-D7|��ن;��Uo=��UΒK -K������X��|@B �t��bÉ��Q�����2��G/T���U�߬4���Ի���
+�%�N9A�8�~㢃� �O6�d�
+�\�1�k�����b�GLޯf�Mo+嶏/I������������{x`�X�]Y��2 G �\CCk��h�{l�+b�q9�>�ܺD;۪h��n�G�,��ٷ��ۊ�Q� 0eP-pD�B B��1N��q٠�w�<k�Fg~xa�;)��j���X��b��Aل�>\�{����
+lxΎ���:P>���ƹ�0'��m����I��z4SC�d�,�vb��#j� >
+Be�B���ꦠMOm}��)��	��2��
+<(1R1�C�[av�0�M��k�>9�&�
+��*�Mr=Fb���>,��Qzp��9�Z�������S�B6�H�q����q+�H���]��D��g�b-%�!�<����	`d�s��s�!���]cC(��8�Hi�e�e B�t�:�:,���k�|ٗ+/�$�t�ۂǍ$[m�?���9��Σ�E����A�U����i*"u$���w�(�te,v*�������g��"����#E�,�a��r^�3�n C�==�?�3i����q����-�#a����"80���}��K�b�3�(�<�>\9Q�d@?M�|��8���~�4膛(�NYee�q:7�c�w7Р)V��m�Tn� 'C캎ׄ� ~��4$�r���o�qA�u*E�ѹ�FW{g4]�1�Uԁ��QkQ��'��Y:7w1�4m���CM�[?v��Y�F������s�f:D���;�C��u�՚w�"lf�.���!�ψM�J����٬�?,rHɟ���)����:�ѐ�@!��q�������&�sU�9x��8t���Q~���?L����Na�1�V�џ�8w�A0�O�� �&�O��nS�+\)WAɴS9iJ����5;t�F�D�����3����-�acO�z��GZ�*N�ں96Cu�S��X�]��&�~Y~�n6�+%���p��G�J�^�q�~V�))�Q�&�q�W��G��Q�K�=�)�A8���2�V�⽎=�?W�.��3Z��w�L��v	��T,`�rP�Bm�9zI�?���+��c^��)o�^%�^B1F0	*�H��
+	1 n e f _ c e r t0#	*�H��
+	12��1n�=�
+�l�w�Q�;��0A010
+	`�He  �Dw��
+سPQaJv��gU�:��xd�Z�՟���Pn�a�D� 
\ No newline at end of file
Index: backend/app/app/tools/monitoring_callbacks.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app/app/tools/monitoring_callbacks.py b/backend/app/app/tools/monitoring_callbacks.py
--- a/backend/app/app/tools/monitoring_callbacks.py	(revision 1656a2f68162b5359900dae743e24cf74009fcad)
+++ b/backend/app/app/tools/monitoring_callbacks.py	(date 1707842585695)
@@ -1,73 +1,78 @@
 import requests, json
 
+
 def location_callback(ue, callbackurl, subscription):
     url = callbackurl
 
     payload = json.dumps({
-    "externalId" : ue.get("external_identifier"),
-    "ipv4Addr" : ue.get("ip_address_v4"),
-    "subscription" : subscription,
-    "monitoringType": "LOCATION_REPORTING",
-    "locationInfo": {
-        "cellId": ue.get("cell_id_hex"),
-        "enodeBId": ue.get("gnb_id_hex")
-    }
+        "externalId": ue.get("external_identifier"),
+        "ipv4Addr": ue.get("ip_address_v4"),
+        "subscription": subscription,
+        "monitoringType": "LOCATION_REPORTING",
+        "locationInfo": {
+            "cellId": ue.get("cell_id_hex"),
+            "enodeBId": ue.get("gnb_id_hex")
+        }
     })
     headers = {
-    'accept': 'application/json',
-    'Content-Type': 'application/json'
+        'accept': 'application/json',
+        'Content-Type': 'application/json'
     }
 
-    #Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts 
-    #First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts 
-    #(i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
-    
+    # Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts
+    # First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts
+    # (i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
+
     response = requests.request("POST", url, headers=headers, data=payload, timeout=(3.05, 27))
-    
+
     return response
 
+
 def loss_of_connectivity_callback(ue, callbackurl, subscription):
     url = callbackurl
 
     payload = json.dumps({
-    "externalId" : ue.get("external_identifier"),
-    "ipv4Addr" : ue.get("ip_address_v4"),
-    "subscription" : subscription,
-    "monitoringType": "LOSS_OF_CONNECTIVITY",
-    "lossOfConnectReason": 7
+        "externalId": ue.get("external_identifier"),
+        "ipv4Addr": ue.get("ip_address_v4"),
+        "subscription": subscription,
+        "monitoringType": "LOSS_OF_CONNECTIVITY",
+        "lossOfConnectReason": 7
     })
     headers = {
-    'accept': 'application/json',
-    'Content-Type': 'application/json'
+        'accept': 'application/json',
+        'Content-Type': 'application/json'
     }
 
-    #Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts 
-    #First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts 
-    #(i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
-    
+    # Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts
+    # First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts
+    # (i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
+
     response = requests.request("POST", url, headers=headers, data=payload, timeout=(3.05, 27))
-    
+
     return response
 
+
 def ue_reachability_callback(ue, callbackurl, subscription, reachabilityType):
     url = callbackurl
 
     payload = json.dumps({
-    "externalId" : ue.get("external_identifier"),
-    "ipv4Addr" : ue.get("ip_address_v4"),
-    "subscription" : subscription,
-    "monitoringType": "UE_REACHABILITY",
-    "reachabilityType": reachabilityType
+        "externalId": ue.get("external_identifier"),
+        "ipv4Addr": ue.get("ip_address_v4"),
+        "subscription": subscription,
+        "monitoringType": "UE_REACHABILITY",
+        "reachabilityType": reachabilityType
     })
     headers = {
-    'accept': 'application/json',
-    'Content-Type': 'application/json'
+        'accept': 'application/json',
+        'Content-Type': 'application/json'
     }
 
-    #Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts 
-    #First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts 
-    #(i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
-    
+    # Timeout values according to https://docs.python-requests.org/en/master/user/advanced/#timeouts
+    # First value of the tuple "3.05" corresponds to connect and second "27" to read timeouts
+    # (i.e., connect timeout means that the server is unreachable and read that the server is reachable but the client does not receive a response within 27 seconds)
+
     response = requests.request("POST", url, headers=headers, data=payload, timeout=(3.05, 27))
-    
-    return response
\ No newline at end of file
+
+    return response
+
+
diff --git a/backend/app/app/api/api_v1/endpoints/eventexposure.py b/backend/app/app/api/api_v1/endpoints/eventexposure.py
new file mode 100644
diff --git a/nginx/certs/self_signed_certificate.pfx b/nginx/certs/self_signed_certificate.pfx
new file mode 100755
index 0000000000000000000000000000000000000000..fd5bacf1e1941ef58ac88a6bfb0aebae221b85e3
GIT binary patch
literal 2675
zc$|flXE+;*9)}Z>h}de6PJ4zLrIl!n+AS?=q=F)ZV=FZqdzIRIR*_O8Y3*7qirT5Y
zT53nF+IpPl-shZqKb=qi=l{OX@9PW4!JH|8lyDr3A3`k>rV+MJ2c!b#;b3ea9E|xK
z)5CEf+&>DEhXc8vqw^8q{9yiP1ULTs0n@>?;KKjBv~V5}H2Nj&vX~>}Cj|u*0H=jO
z|05}=!2mcfgc=>D0kok60YyNJ+r@7rnAxr(G>ZV<ZnW))ARGv=OYP+6Yp2hPoqV)%
zB9!p`G$FBDg516_Ex6P27${C&Cga<BF$bpA^{bR0_L4W56K-3s(+@B5G!%~ox!$!F
z3y8!k{&e9M*I>3_$i2C(#@4&-Pq1Q2@Eo=AYzB-!C0e*7B(6vv3^>m@-eE>TOmmMp
zJ?L-@eVd*t4c&@X+>HtnvupBV9Zx??6@0nXu4iZ<e%C0eEIytdbHY%5<Z-Rmk3mnb
zhq|l%`i9u|PdJ}U5Q9Ikp~<>WOx1WFxqJ$hNx0XUdg*08OL`Je!`3pTZehr=GHAIj
zm~b(*f+fFfsPw8|?i*?BFRMTWyMu+Y@s%z!mYsS(477|n4#5uNp7M0svRZ5jWtbqe
zAC#Vzi89fI5~L*?FQqXka<O6E7f4~S&F1w+B_1PDj}KlKu4>*MN$6L<Pan(Azv-)+
zV=j4QZt)3&joNq-eN+Tqq5Clv`Z}=iJ^|bN0IPFl#>qk2?2?gO8)-l-T^R$a>L|*L
zz>OGnC>5k;%=g-R=oZFjU6fXafAZ>1pSjZgc>nGkD*AxeS7y|}HmV;SV%aXbg{YnQ
z0h+&~;??u^p=hD7Z9l2aI3SkInuCnKe~(@?K}GRok5wY_$r-R`s;SH~pEMr8PWhy_
zFNU*J5O6)pqdV~<V!&Iwb5};_2J__m9i^p%3H;q>uV}lo1CllKFN;1iyAbTaDu>0O
zbeQI&%L|;bwOSQD)xCS0&<ps_VeFL2taF0`<p;dGZmg*G*D+hgLM9&@!|pg(|K!v6
z&$#9vT-R?m0)DN-+zYX#M&esTEtwX7kM?_+=X8KvE+it~e^WbTBEy-bLMfMe*~?tF
zX5<2PNv4V4E+0pvf+G`}_bICRSQRk0y@|tbQsa{sYr{z~x*@EVv&pZNTIQ%4BM2U2
zl4m@8G}%E^ZmO5!I<=bwWnx}OZF^{tm(C1o0U%jzEfsE!!)XZ4Xr$t2!SxqQiGW_h
z>J_I3U!Od7`Ne3Y52G4hZV@eBtY^WzKd{2UljC+8zn2uDrfF7^nd)yGbHQ|Y%P_XL
zC6@hkgATs{Q<Y|N4R_r##ZgyqC^WA(U#3xt6DV~2h3<T31y;5iY}F%bI8%6yAX4p>
znMY5k%wq`k93QDP4O(luuh?w#tl0&X+`9(WzV+Cs@LNeCQdzdj>4@B#hsX3G^7ozA
zj0{|n9KS&VeWMTL;vRJuAMF;;)eUa*c+-8wV<UZ}e<~|N-Gv$~Q0hp^G`pth#J6X>
zE#j*)vd<k52Fqo!K}GJRxQ2@@Ta8<9d8b9&mnVFg^1BkbDu<RTg^T9(D^K{pn`Ho?
z52;n-_Nly0Dy(rIFh5o#g0G1`QouUFao~{u3l!KBgaf;t<G++Wgyz4B76zm^ms00Y
z{NI8!-c8*?lYL<FuR*eRI5za2m-H%6qH9b4uu=`efd)?3Qw+C}c8~VsbLx{5M5v5P
zo*#;S`E_#ZQ*3p{Rv4q&K(Z?$wplXYhMP=sl&T1H7P`@vG>277QXf3>F8!#L^d-l<
zcA%-ieT~kBsA0@c6Ib$LMboYDC2zGlvgAuE=|YZ_JInn2!9i|L=jcc=h81IIt}ii@
z3StLaQMr>9f0ca2S6hZM-!$A{S3b#=law(mbVF=4o)<pGmQ}3q>6hS?NmBDD0~>e}
z^C<0xjnAdboHREt1X$>Un6RZ_OtnY}KPo2V#}zii2le;Fw8vbr==syhKtMLEU17>4
zZzabj;MGPJf@No~oz-Yr=JEHNvX5n)b?6JiogUaIB6L?rgmccizt+r=V3@m`i4c}Q
zu7~xhF5E)@R@NxV>jubFt}PP%)WOL@F{(REo3bAxHqwTh9}<PnBuRcvDa}<A&I$d8
zn_3~cb7(0HlK<r0dwOYTce+!7;o9ITY2|9pgZIHgd@ig3UXuoR@=<b+(>gcr5Vvt(
z;R}+V(8+*II=KN<m39?fX9zuAHp;A4IIi_FB_fC1Y!`?&GbxIOO>(6dxsmKPpL+-j
z+p6~Z$+eKDfp3Gh`>>VtPvQl%;LIEk#XEyc_h0n6Z7!8RM_5PqOO6FhFdN79FX~nJ
zyJ*ldWPI(nuLXK?(#^^(7p&`jxx@5KQG{5!G2_l(<3(R9n{{+L$lXB>jJQWQWPI~Z
zOTgqQO_%z+jad>`mBbK39`}Glz2o!WGT#^tegMhxSvsDTjA=*n9T`U*g}`Vg($>1H
zyYtR9zOhNmfFI+5*Q*3?3#+QciY5F2*T4F-q*xQjb{C*KO2||c&F!QrO7t@(9?!eI
zWfuxB_E1tpoYcYdh^~$jjt6c>8(-fE#7Iu*>ZzloT7&E^yRVl|b57bTsB#9pOu=6C
z-SO<C5XB~oY6+tkZJVJTm5+W~1imSymwmp`3nUz=XX}*gA*xg!@tO-i7?B^iFptdb
zSsjABVo~AoF0UyMY;<aD8*4JFK3Nz<5qRbTCoTQ^4@!Pb#6!MxvIO}r1PFq=P{Utu
z@oMom?;6WPLTVaZ)Yq!nH>Fh`PuJf1spZhW8o!+m%#W(?g+1A)hEM)}?;jrI-=d0?
zx%H||V`PWa6xwyuTz-@WlN2e8*lW5O9c1_cMkk<rKh@P-kx%Izv`)QH;4lf9@|I5`
zPdN0f)tMWIwS4o$x(TJI;1yxPg-6%41sBK;(Ps^c6i6_NgpR@T&>D-HZO;&w^hSdX
zqZ}jA>0Y*|?a$1b$JIG%A|0GMy48kEffh>y^phPvgXGkCj`~C`;j(M$EV*v}Gom$1
zFOTscX%A|1)7g^2NSK@bnI2#uE4a)4rLOgqNz`X~EAzV^c@+^duN8~OAruovVX$CZ
zvXa)@6t4HPq5+YGc&v-jD+2ceHFS8i%3*fy@C<&wiWLy6V-uREHGP{yEFetX^J5JD
zG7Ta2SU*elv40&`&i9iu6VhqD#VElnX0PWYI=i-O8FzSA`cx;xSK=g>vre9v;e*(3
zs4`Ob5p<;x1Jmv`NZm*Bbm=oHw30;FSJ#N^Ezmsd5KnJQ`m7ErR$OJKwd8s~^@^Fz
zIIWdldlSvm`Fc&0W>n-K$VMrC__e?LNX;t624ayW97+9wS1N~XI2J#p+}8hov!fG!
z8!iQ>`@4=5KrjGwIXce$K1y_(jv^#-o$J`I=c9FzXG*>08qnx<i}sMt3<%l+H1I&*
KbBO&bwSNMclj9Wt

